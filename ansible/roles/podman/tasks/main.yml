# SPDX-License-Identifier: MIT-0
---
# tasks file for podman_container
- name: Include Debian-specific tasks
  ansible.builtin.include_tasks: "{{ ansible_os_family | lower }}.yml"
  when: ansible_os_family == debian_family_name

- name: Create a default Podman machine
  ansible.builtin.command:
    cmd: podman machine init
  args:
    creates: ~/.local/share/containers/podman/machine/default
  become: false

- name: Check Podman machine status
  ansible.builtin.command:
    cmd: podman machine list --format=json
  register: podman_machine_status
  changed_when: false
  become: false

- name: Start the default Podman machine
  ansible.builtin.command:
    cmd: podman machine start
  when: "'running' not in podman_machine_status.stdout"
  register: podman_machine_status
  changed_when: "'running' not in podman_machine_status.stdout"
  become: false

- name: Check if already logged in to Docker registry
  ansible.builtin.command:
    cmd: podman login --get-login {{ docker_registry }}
  register: podman_login_status
  ignore_errors: true
  changed_when: false
  become: false

- name: Log in to Docker registry
  ansible.builtin.command:
    cmd: podman login --username={{ docker_username }} --password={{ docker_password }} {{ docker_registry }}
  when:
    - docker_username is defined
    - docker_password is defined
    - docker_registry is defined
    - podman_login_status.rc != 0
  changed_when: podman_login_status.rc != 0
  become: false

- name: Configure AppArmor profiles for Podman
  ansible.builtin.template:
    src: podman_apparmor.j2
    dest: /etc/apparmor.d/local/usr.bin.podman
    mode: '0644'
  become: true
  when:
    - apparmor_dir.stat.exists
    - apparmor_dir.stat.isdir
  notify: Reload AppArmor profiles

- name: Configure UFW rules for Podman services
  community.general.ufw:
    rule: allow
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
    comment: "{{ item.comment }}"
  loop: "{{ podman_ufw_rules }}"
  become: true
  when: ufw_installed.rc == 0
  notify: Reload UFW
