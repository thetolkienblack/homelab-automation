# SPDX-License-Identifier: MIT-0
---
- name: 'Check if NVIDIA module is loaded'
  ansible.builtin.shell: "lsmod | grep -q '^nvidia'"
  register: nvidia_module_loaded
  ignore_errors: true
  changed_when: false
  become: true

- name: 'Containers | Podman | Include OS-specific tasks'
  ansible.builtin.include_tasks: "{{ ansible_os_family | lower }}.yml"

- name: 'Containers | Podman | Check if Podman machine is created'
  ansible.builtin.command: podman machine list --format json
  register: podman_machine_list
  changed_when: false
  failed_when: false

- name: 'Containers | Podman | Set fact if Podman machine is created'
  ansible.builtin.set_fact:
    podman_machine_created: "{{ (podman_machine_list.stdout | from_json) | length > 0 }}"

- name: 'Containers | Podman | Create a default Podman machine'
  ansible.builtin.command:
    cmd: podman machine init
  args:
    creates: ~/.local/share/containers/podman/machine/default
  become: false
  when: not podman_machine_created

- name: 'Containers | Podman | Check Podman machine status'
  ansible.builtin.command:
    cmd: podman machine list --format=json
  register: podman_machine_status
  changed_when: false
  become: false

- name: 'Containers | Podman | Start the default Podman machine'
  ansible.builtin.command:
    cmd: podman machine start
  when: "'running' not in podman_machine_status.stdout"
  register: podman_machine_status
  changed_when: "'running' not in podman_machine_status.stdout"
  become: false

- name: 'Containers | Podman | Check if already logged in to Docker registry'
  ansible.builtin.command:
    cmd: podman login --get-login {{ container_docker_registry }}
  register: podman_login_status
  ignore_errors: true
  changed_when: false
  become: false

- name: 'Containers | Podman | Log in to Docker registry'
  ansible.builtin.command:
    cmd: podman login --username={{ docker_username }} --password={{ docker_password }} {{ containers_docker_registry }}
  when:
    - docker_username is defined
    - docker_password is defined
    - docker_registry is defined
    - podman_login_status.rc != 0
  changed_when: podman_login_status.rc != 0
  failed_when:
    - docker_username == ''
    - docker_password == ''
  become: false

- name: 'Containers | Podman | Apply UFW rules'
  ansible.builtin.include_tasks: "ufw.yml"
  when:
    - docker_binary.stat.exists and containers_docker_ports | length > 0
    - ufw_installed is defined and ufw_installed
