# SPDX-License-Identifier: MIT-0
---
# tasks file for ansible_role_template
- name: Include Debian-specific tasks
  ansible.builtin.include_tasks: "{{ ansible_os_family | lower }}.yml"
  when: ansible_os_family == debian_family_name

# MongoDB
- name: Create MongoDB keyfile
  ansible.builtin.copy:
    content: "{{ mongodb_keyfile_content }}"
    dest: "{{ mongodb_keyfile }}"
    owner: mongodb
    group: mongodb
    mode: "0600"
  become: true
  notify: Restart MongoDB

- name: Ensure mongodb user exists (if not using a package manager)
  ansible.builtin.user:
    name: mongodb
    system: true
    shell: /usr/sbin/nologin
  become: true

- name: Configure MongoDB
  ansible.builtin.template:
    src: mongod.conf.j2
    dest: /etc/mongod.conf
    owner: mongodb
    group: mongodb
    mode: "0644"
  become: true
  notify: Restart MongoDB


- name: Ensure MongoDB is started and enabled
  ansible.builtin.systemd:
    name: mongod
    enabled: true
    state: started
  become: true

- name: Enable apparmor for MongoDB from template
  ansible.builtin.template:
    src: mongodb.apparmor.j2
    dest: /etc/apparmor.d/usr.sbin.mongod
    owner: root
    group: root
    mode: '0644'
  become: true

- name: Parse and load the MongoDB AppArmor profile in complain mode
  ansible.builtin.command: apparmor_parser -r /etc/apparmor.d/usr.sbin.mongod
  changed_when: false

- name: Switch to enforce mode once tested for MongoDB
  ansible.builtin.command: aa-enforce /usr/bin/mongod
  changed_when: false

- name: Allow MongoDB access from trusted host
  community.general.ufw:
    rule: allow
    port: "{{ mongodb_port | default(27017) }}"
    proto: tcp
    from_ip: "{{ mongodb_bind_ip | default('127.0.0.1') }}"
  become: true