---
- name: 'Virtualization | Libvirt | Network | Remove existing bridge configurations'
  ansible.builtin.command: nmcli connection delete {{ host_bridge_name }}
  changed_when: true
  become: true

- name: 'Virtualization | Libvirt | Network | Remove existing enp14s0 configuration'
  ansible.builtin.command: nmcli connection delete {{ host_network_interface }}
  changed_when: true
  become: true

- name: 'Virtualization | Libvirt | Network | Create new bridge br0'
  ansible.builtin.command: nmcli connection add type bridge autoconnect yes con-name {{ host_bridge_name }} ifname {{ host_bridge_name }}
  changed_when: true
  become: true

- name: 'Virtualization | Libvirt | Network | Add enp14s0 as a slave to br0'
  ansible.builtin.command: nmcli connection add type bridge-slave
    autoconnect yes con-name {{ host_bridge_name }}-slave
    ifname {{ host_network_interface }} master {{ host_bridge_name }}
  changed_when: true
  become: true

- name: 'Virtualization | Libvirt | Network | Set static IP and DNS for br0'
  ansible.builtin.command: >
    nmcli connection modify {{ host_bridge_name }}
    ipv4.addresses {{ virtualization_libvirt_network_ipv4_address }}
    ipv4.gateway {{ virtualization_libvirt_network_ipv4_gw }}
    ipv4.dns {{ virtualization_libvirt_network_ipv4_dns }}
    ipv4.method {{ virtualization_libvirt_network_ipv4_type }}
  become: true
  changed_when: true
  when: virtualization_libvirt_network_ipv4_type == "manual"

- name: 'Virtualization | Libvirt | Network | Restart NetworkManager'
  ansible.builtin.service:
    name: NetworkManager
    state: restarted
  become: true

- name: 'Virtualization | Libvirt | Network | Bring up br0'
  ansible.builtin.command: nmcli connection up {{ host_bridge_name }}
  changed_when: true
  become: true

- name: 'Virtualization | Libvirt | Network | Bring up br0-slave'
  ansible.builtin.command: nmcli connection up {{ host_bridge_name }}-slave
  changed_when: true
  become: true

- name: 'Virtualization | Libvirt | Network | Get all virsh VMs'
  ansible.builtin.command: virsh list --all --name
  register: virsh_vms
  changed_when: false
  become: true

- name: 'Virtualization | Libvirt | Network | Destroy virsh vms'
  ansible.builtin.command: virsh destroy {{ item }}
  loop: "{{ virsh_vms.stdout_lines }}"
  changed_when: true
  when: virsh_vms.stdout_lines | length > 0
  become: true

- name: 'Virtualization | Libvirt | Network | Undefine virsh vms'
  ansible.builtin.command: virsh undefine {{ item }} --remove-all-storage
  loop: "{{ virsh_vms.stdout_lines }}"
  changed_when: true
  when: virsh_vms.stdout_lines | length > 0
  become: true

- name: 'Virtualization | Libvirt | Network | Get all virsh networks'
  ansible.builtin.command: virsh net-list --all --name
  register: virsh_networks
  changed_when: false
  become: true

- name: 'Virtualization | Libvirt | Network | Destroy virsh networks'
  ansible.builtin.command: virsh net-destroy {{ item }}
  loop: "{{ virsh_networks.stdout_lines }}"
  changed_when: true
  when: virsh_networks.stdout_lines | length > 0
  become: true

- name: 'Virtualization | Libvirt | Network | Undefine virsh networks'
  ansible.builtin.command: virsh net-undefine {{ item }}
  loop: "{{ virsh_networks.stdout_lines }}"
  changed_when: true
  when: virsh_networks.stdout_lines | length > 0
  become: true

- name: 'Virtualization | Libvirt | Network | Configure Libvirt to use br0 as a bridge network'
  ansible.builtin.template:
    src: host_bridge_name.xml.j2
    dest: /tmp/default.xml
    mode: "0600"
  become: true

- name: 'Virtualization | Libvirt | Network | Define the default network'
  ansible.builtin.command: virsh net-define /tmp/default.xml
  changed_when: true
  become: true

- name: 'Virtualization | Libvirt | Network | Start the default network'
  ansible.builtin.command: virsh net-start default
  changed_when: true
  become: true

- name: 'Virtualization | Libvirt | Network | Autostart the default network'
  ansible.builtin.command: virsh net-autostart default
  changed_when: true
  become: true
